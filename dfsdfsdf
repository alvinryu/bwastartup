[1mdiff --git a/campaign/entity.go b/campaign/entity.go[m
[1mindex f8f3b76..df2c1e8 100644[m
[1m--- a/campaign/entity.go[m
[1m+++ b/campaign/entity.go[m
[36m@@ -1,6 +1,9 @@[m
 package campaign[m
 [m
[31m-import "time"[m
[32m+[m[32mimport ([m
[32m+[m	[32m"bwastartup/user"[m
[32m+[m	[32m"time"[m
[32m+[m[32m)[m
 [m
 type Campaign struct{[m
 	ID 					int[m
[36m@@ -16,6 +19,7 @@[m [mtype Campaign struct{[m
 	CreatedAt			time.Time[m
 	UpdatedAt			time.Time[m
 	CampaignImages 		[]CampaignImage[m
[32m+[m	[32mUser 				user.User[m
 }[m
 [m
 type CampaignImage struct{[m
[1mdiff --git a/campaign/formatter.go b/campaign/formatter.go[m
[1mindex bf8b24e..4696e8b 100644[m
[1m--- a/campaign/formatter.go[m
[1m+++ b/campaign/formatter.go[m
[36m@@ -1,5 +1,9 @@[m
 package campaign[m
 [m
[32m+[m[32mimport ([m
[32m+[m	[32m"strings"[m
[32m+[m[32m)[m
[32m+[m
 type CampaignFormatter struct {[m
 	ID 					int	`json:"id"`[m
 	UserID				int	`json:"user_id"`[m
[36m@@ -8,6 +12,7 @@[m [mtype CampaignFormatter struct {[m
 	ImageURL 			string	`json:"image_url"`[m
 	GoalAmount			int		`json:"goal_amount"`[m
 	CurrentAmount		int		`json:"current_amount"`[m
[32m+[m	[32mSlug				string	`json:"slug"`[m
 }[m
 [m
 func FormatCampaign(campaign Campaign) CampaignFormatter {[m
[36m@@ -18,9 +23,11 @@[m [mfunc FormatCampaign(campaign Campaign) CampaignFormatter {[m
 	campaignFormatter.ShortDescription = campaign.ShortDescription[m
 	campaignFormatter.GoalAmount = campaign.GoalAmount[m
 	campaignFormatter.CurrentAmount = campaign.CurrentAmount[m
[32m+[m	[32mcampaignFormatter.Slug = campaign.Slug[m
 	campaignFormatter.ImageURL = ""[m
 [m
 	if len(campaign.CampaignImages) > 0 {[m
[32m+[m		[32m//campaign.CampaignImages it is a preload[m
 		campaignFormatter.ImageURL = campaign.CampaignImages[0].FileName[m
 	}[m
 [m
[36m@@ -36,4 +43,82 @@[m [mfunc FormatCampaigns(campaigns []Campaign) []CampaignFormatter{[m
 	}[m
 [m
 	return campaignsFormatter[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mtype CampaignDetailFormatter struct {[m
[32m+[m	[32mID 					int							`json:"id"`[m
[32m+[m	[32mName 				string						`json:"name"`[m
[32m+[m	[32mShortDescription	string						`json:"short_description"`[m
[32m+[m	[32mDescription			string						`json:"description"`[m
[32m+[m	[32mImageURL			string						`json:"image_url"`[m
[32m+[m	[32mGoalAmount			int							`json:"goal_amount"`[m
[32m+[m	[32mCurrentAmount		int							`json:"current_amount"`[m
[32m+[m	[32mUserID				int							`json:"user_id"`[m
[32m+[m	[32mSlug				string						`json:"slug"`[m
[32m+[m	[32mPerks				[]string					`json:"perks"`[m
[32m+[m	[32mUser 				CampaignUserFormatter		`json:"user"`[m
[32m+[m	[32mImages				[]CampaignImageFormatter	`json:"images"`[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mtype CampaignUserFormatter struct{[m
[32m+[m	[32mName 		string	`json:"name"`[m
[32m+[m	[32mImageURL 	string	`json:"image_url"`[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mtype CampaignImageFormatter struct{[m
[32m+[m	[32mImageURL	string	`json:"image_url"`[m
[32m+[m	[32mIsPrimary	bool	`json:"is_primary"`[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunc FormatCampaignDetail(campaign Campaign) CampaignDetailFormatter{[m
[32m+[m	[32mcampaignDetailFormatter	:= CampaignDetailFormatter{}[m
[32m+[m	[32mcampaignDetailFormatter.ID = campaign.ID[m
[32m+[m	[32mcampaignDetailFormatter.Name = campaign.Name[m
[32m+[m	[32mcampaignDetailFormatter.ShortDescription = campaign.ShortDescription[m
[32m+[m	[32mcampaignDetailFormatter.Description = campaign.Description[m
[32m+[m	[32mcampaignDetailFormatter.GoalAmount = campaign.GoalAmount[m
[32m+[m	[32mcampaignDetailFormatter.CurrentAmount = campaign.CurrentAmount[m
[32m+[m	[32mcampaignDetailFormatter.UserID	= campaign.UserID[m
[32m+[m	[32mcampaignDetailFormatter.Slug = campaign.Slug[m
[32m+[m	[32mcampaignDetailFormatter.ImageURL = ""[m
[32m+[m
[32m+[m	[32mif len(campaign.CampaignImages) > 0 {[m
[32m+[m		[32m//it is a preload[m
[32m+[m		[32mcampaignDetailFormatter.ImageURL = campaign.CampaignImages[0].FileName[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mvar perks []string[m
[32m+[m	[32mfor _, perk := range strings.Split(campaign.Perks, ","){[m
[32m+[m		[32mperks = append(perks, strings.TrimSpace(perk))[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mcampaignDetailFormatter.Perks = perks[m
[32m+[m
[32m+[m	[32m//it is a preload[m
[32m+[m	[32muser := campaign.User[m
[32m+[m
[32m+[m	[32mcampaignUserFormatter := CampaignUserFormatter{}[m
[32m+[m	[32mcampaignUserFormatter.Name = user.Name[m
[32m+[m	[32mcampaignUserFormatter.ImageURL = user.AvatarFileName[m
[32m+[m
[32m+[m	[32mcampaignDetailFormatter.User = campaignUserFormatter[m
[32m+[m
[32m+[m	[32mimages := []CampaignImageFormatter{}[m
[32m+[m[41m	[m
[32m+[m	[32mfor _, image := range campaign.CampaignImages{[m
[32m+[m		[32mcampaignImageFormatter := CampaignImageFormatter{}[m
[32m+[m		[32mcampaignImageFormatter.ImageURL = image.FileName[m
[32m+[m
[32m+[m		[32misPrimary := false[m
[32m+[m		[32mif image.IsPrimary == 1{[m
[32m+[m			[32misPrimary = true[m
[32m+[m		[32m}[m
[32m+[m		[32mcampaignImageFormatter.IsPrimary = isPrimary[m
[32m+[m
[32m+[m		[32mimages = append(images, campaignImageFormatter)[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mcampaignDetailFormatter.Images = images[m
[32m+[m
[32m+[m	[32mreturn campaignDetailFormatter[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/campaign/input.go b/campaign/input.go[m
[1mindex 2ded8a9..0b86163 100644[m
[1m--- a/campaign/input.go[m
[1m+++ b/campaign/input.go[m
[36m@@ -1,2 +1,5 @@[m
 package campaign[m
 [m
[32m+[m[32mtype GetCampaignDetailInput struct{[m
[32m+[m	[32mID int	`uri:"id" binding:"required"`[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/campaign/repository.go b/campaign/repository.go[m
[1mindex c311408..be185ea 100644[m
[1m--- a/campaign/repository.go[m
[1m+++ b/campaign/repository.go[m
[36m@@ -7,6 +7,7 @@[m [mimport ([m
 type Repository interface{[m
 	FindAll() ([]Campaign, error)[m
 	FindByUserID(userID int) ([]Campaign, error)[m
[32m+[m	[32mFindByID(ID int) (Campaign, error)[m
 }[m
 [m
 type repository struct{[m
[36m@@ -37,4 +38,15 @@[m [mfunc (r *repository) FindByUserID(userID int) ([]Campaign, error){[m
 	}[m
 [m
 	return campaigns, nil[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunc (r *repository) FindByID(ID int) (Campaign, error){[m
[32m+[m	[32mvar campaign Campaign[m
[32m+[m
[32m+[m	[32merr := r.db.Preload("User").Preload("CampaignImages").Where("id = ?", ID).Find(&campaign).Error[m
[32m+[m	[32mif err != nil {[m
[32m+[m		[32mreturn campaign, err[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mreturn campaign, nil[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/campaign/service.go b/campaign/service.go[m
[1mindex b01b784..70e1515 100644[m
[1m--- a/campaign/service.go[m
[1m+++ b/campaign/service.go[m
[36m@@ -1,7 +1,8 @@[m
 package campaign[m
 [m
 type Service interface{[m
[31m-	GetCampaigns(userID int) ([]Campaign, error)	[m
[32m+[m	[32mGetCampaigns(userID int) ([]Campaign, error)[m
[32m+[m	[32mGetCampaignByID(input GetCampaignDetailInput) (Campaign, error)[m[41m	[m
 }[m
 [m
 type service struct{[m
[36m@@ -28,4 +29,14 @@[m [mfunc (s *service) GetCampaigns(userID int) ([]Campaign, error){[m
 	}[m
 [m
 	return campaigns, nil[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunc (s *service) GetCampaignByID(input GetCampaignDetailInput) (Campaign, error){[m
[32m+[m	[32mcampaign, err := s.repository.FindByID(input.ID)[m
[32m+[m
[32m+[m	[32mif err != nil {[m
[32m+[m		[32mreturn campaign, err[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mreturn campaign, nil[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/handler/campaign.go b/handler/campaign.go[m
[1mindex daff6e5..1e028d5 100644[m
[1m--- a/handler/campaign.go[m
[1m+++ b/handler/campaign.go[m
[36m@@ -29,3 +29,24 @@[m [mfunc (h *campaignHandler) GetCampaigns(c *gin.Context){[m
 	response := helper.APIResponse("List of campaigns", http.StatusOK, "success", campaign.FormatCampaigns(campaigns))[m
 	c.JSON(http.StatusOK, response)[m
 }[m
[32m+[m
[32m+[m[32mfunc (h *campaignHandler) GetCampaign(c *gin.Context){[m
[32m+[m	[32mvar input campaign.GetCampaignDetailInput[m
[32m+[m
[32m+[m	[32merr := c.ShouldBindUri(&input)[m
[32m+[m	[32mif err != nil {[m
[32m+[m		[32mresponse := helper.APIResponse("Failed to get detail of campaign", http.StatusBadRequest, "error", nil)[m
[32m+[m		[32mc.JSON(http.StatusBadRequest, response)[m
[32m+[m		[32mreturn[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mcampaignDetail, err := h.service.GetCampaignByID(input)[m
[32m+[m	[32mif err != nil {[m
[32m+[m		[32mresponse := helper.APIResponse("Failed to get detail of campaign", http.StatusBadRequest, "error", nil)[m
[32m+[m		[32mc.JSON(http.StatusBadRequest, response)[m
[32m+[m		[32mreturn[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mresponse := helper.APIResponse("Campaign detail", http.StatusOK, "succes", campaign.FormatCampaignDetail(campaignDetail))[m
[32m+[m	[32mc.JSON(http.StatusOK, response)[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/main.go b/main.go[m
[1mindex e0a322c..8e5af5c 100644[m
[1m--- a/main.go[m
[1m+++ b/main.go[m
[36m@@ -34,6 +34,7 @@[m [mfunc main() {[m
 	campaignHandler := handler.NewCampaignHandler(campaignService)[m
 [m
 	router := gin.Default()[m
[32m+[m	[32mrouter.Static("/images", "./images")[m
 	api := router.Group("/api/v1")[m
 [m
 	api.POST("/users", userHandler.RegisterUser)[m
[36m@@ -43,6 +44,7 @@[m [mfunc main() {[m
 	api.GET("/users/fetch", userHandler.FetchUser)[m
 [m
 	api.GET("/campaigns", campaignHandler.GetCampaigns)[m
[32m+[m	[32mapi.GET("/campaigns/:id", campaignHandler.GetCampaign)[m
 [m
 	router.Run()[m
 }[m
